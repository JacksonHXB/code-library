【1】AspectJ,Spring对AOP区别：
	AspectJ与Spring是两种框架，没有关系，AOP只是一种思想，前者纯粹就是实现AOP，而且框架很小，使用更为方便，支持注解式开发
	Spring又将AspectJ的对于AOP的实现也引入到了自己的框架中。在Spring中使用AOP开发时，一般使用AspectJ的实现方式



【2】AspectJ的通知类型
	AspectJ中常用的通知有五种类型；
		1）前置通知
		2）后置通知
		3）环绕通知
		4）异常通知
		5）最终通知
		其中最终通知是指，无论程序是否执行正常，该通知都会执行。类似于Try..catch中的finally的代码块
	
		
		
【3】AspectJ的切入点表达式
	AspectJ专门定义了表达式用于指定切入点。表达式原型：
		execution([访问权限类型] 返回值类型 [全限定性类名] 方法名 抛出异常类型)
		切入点表达式符号：
			*			0至多个任意字符
			..			用在方法参数中，表示任意多个参数用在包名后，表示当前包及其子包路径
			+			用在类名后，表示当前类及其子类；用在接口后，表示当前接口及其实现类

		例子：
			execution(public * *(..))：任意公共方法
			execution(* *.service.*.*(..)):指定只有一级包下的service子包下所有类（接口）中的所有方法
			execution(* *..service.*.*(..)):指定所有包下的service子包下所有类（接口）中的所有方法
			


































