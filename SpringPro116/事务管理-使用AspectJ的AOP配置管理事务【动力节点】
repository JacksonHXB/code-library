Spring的事务管理：
	事务原本是数据库中的概念，在Dao层。但一般情况下，需要将事务提升到业务层，即Service层。这样做是为了能够使用事务的特性来管理具体的业务
	在Spring中通常可以通过以下三种方式的特性来管理具体的业务：
		(1) 使用Spring的事务代理工厂管理事务
		(2) 使用Spring的事务注解管理事务
		(3) 使用AspectJ的AOP配置管理事务


【1】Spring事务管理API
	(1) 事务管理接口
		事务管理器是PlatformTransactionManager接口对象。其主要用于完成事务的提交，回滚，以及获取事务的状态信息。
		A，常用的实现类：
			1> DataSourceTransactionManager:使用JDBC或IBatis进行持久化数据时使用
			2> HibernateTransactionManager:使用Hibernate进行持久化数据时使用
		B，Spring的回滚方式
			Spring事务的默认回滚方式是：发生运行时异常时回滚，发生受查异常时提交。不过，对于受查异常，程序员也可以手工设置其回滚方式。
			
	(2) 事务定义接口
		事务定义接口TransactionDefinition中定义了事务描述相关的三类常量：事务隔离级别，事务传播行为，事务默认超时时限，及对它们的操作
		事务隔离级别：
			五个事务隔离级别常量：
				这些常量均是以ISOLATION_开头。
				a, DEFAULT: 			采用DB默认的事务隔离级别。MYSQL的默认为REPEATABLE_READ;Oracle默认为READ_COMMITTED
				b, READ_UNCOMMITTED:	读未提交。未解决任何并发问题
				c，READ_COMMITTED:		读已提交。解决脏度，存在不可重复读与幻读
				d, REPEATABLE_READ:		可重复读，解决脏读，不可重复读，存在幻读
				e，SEAIALIZABLE:			串行化，不存在并发问题
		事务的传播行为: 是指处于不同事务中的方法在相互调用时，执行期间事务的维护情况
			七个事务传播行为常量
				a, REQUIRED：			指定的方法必须在事务内执行。若当前存在事务，就加入到当前事务中；若当前没有事务，则创建一个新事务。这种传播行为是最常见的选择，也是Spring默认的事务传播行为
				b, SUPPORTS: 			指定的方法支持当前事务，但若当前没有事务，也可以以非事务方式执行
				c, MANDATORY: 			执行的方法必须在当前事务内执行，若当前没有事务，则直接抛出异常	
				d, REQUIRES_NEW: 		总是新建一个事务，若当前存在事务，就将当前事务挂起，直到新事物执行完毕
				e, NOT_SUPPORTS: 		指定的方法不能在事务环境中执行，若当前存在事务，就将当前事务挂起
				f, NEVER: 				指定的方法不能在事务环境下执行，若当前存在事务，就直接抛出异常
				g, NESTED: 				指定的方法必须在事务内执行。若当前存在事务，则在嵌套事务内执行；若当前没有事务，则创建爱你一个新事务
		事务默认超时时限：
			常量TIMEOUT_DEFAULT定义了事务底层默认的超时时限，及不支持事务超时时限设置的none值
			注意：事务的超时时限起作用的条件比较多，且超时的时间计算点较复杂，所以该值一般就使用默认值即可。
			




























