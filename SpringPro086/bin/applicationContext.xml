<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns:context="http://www.springframework.org/schema/context"
    xsi:schemaLocation="
    	http://www.springframework.org/schema/beans 
    	http://www.springframework.org/schema/beans/spring-beans.xsd
    	http://www.springframework.org/schema/context
    	http://www.springframework.org/schema/context/spring-context.xsd">
	
	<!-- 注册数据源方式一:Spring内置数据源 
		<bean id="myDataSource" class="org.springframework.jdbc.datasource.DriverManagerDataSource">
			<property name="driverClassName" value="com.mysql.jdbc.Driver"/>
			<property name="url" value="jdbc:mysql://localhost:3306/db_test"/>
			<property name="username" value="root"/>
			<property name="password" value="123456"/>
		</bean>
	-->
	
	<!-- 注册数据源方式二:jdbc内置数据源 
		<bean id="myDataSource" class="org.apache.commons.dbcp2.BasicDataSource">
			<property name="driverClassName" value="com.mysql.jdbc.Driver"/>
			<property name="url" value="jdbc:mysql://localhost:3306/db_test"/>
			<property name="username" value="root"/>
			<property name="password" value="123456"/>
		</bean>
	-->
	
	<!-- 注册数据源方式三:C3P0数据源 :使用C3P0需要两个架包
	-->
		<bean id="myDataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource">
			<property name="driverClass" value="com.mysql.jdbc.Driver" />
			<property name="jdbcUrl" value="jdbc:mysql://localhost:3306/db_test" />
			<property name="user" value="root"/>
			<property name="password" value="123456"/>
		</bean>
	
	<!-- 注册数据库配置文件方式一 
		<bean class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
			<property name="location" value="classpath:jdbc.properties"></property>
		</bean>
	-->
	<!-- 注册数据库配置文件方式二：使用Context约束 -->
	<context:property-placeholder location="classpath:jdbc.properties"/>
	
	<!-- 注册数据源方式三：C3P0数据源，使用配置文件 
	<bean id="myDataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource">
		<property name="driverClass" value="${jdbc.driver}"/>
		<property name="jdbcUrl" value="${jdbc.url}"/>
		<property name="user" value="${jdbc.username}"/>
		<property name="password" value="${jdbc.password}"/>
	</bean>
	-->
	
	<!-- 注册JdbcDaoTemplate ：原始的方法注入JdbcDaoTemplate
		<bean id="myJdbcTemplate" class="org.springframework.jdbc.core.JdbcTemplate">
			<property name="dataSource" ref="myDataSource" />
		</bean>
		注册Dao:因为dao层继承自JDBCTemplate所以也需要注册JdbcTemplate
		<bean id="studentDao" class="com.hxb.dao.StudentDaoImpl">
			<property name="jdbcTemplate" ref="myJdbcTemplate"/>
		</bean>
	-->
	<!-- 注册Dao：自动注入JdbcDaoTemplate -->
	<bean id="studentDao" class="com.hxb.dao.StudentDaoImpl">
		<!-- 根据Jdbc源码分析，如果传递参数为数据源，会自动添加JdbcDaoTemplate -->
		<property name="dataSource" ref="myDataSource" />
	</bean>
	
	
	<!-- 注册Service -->
	<bean id="studentService" class="com.hxb.service.StudentServiceImpl">
		<property name="dao" ref="studentDao"/>
	</bean>
</beans>




















































