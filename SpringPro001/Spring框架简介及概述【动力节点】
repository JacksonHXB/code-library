【1】简介
	Spring是于2003年兴起的一个轻量级java开发框架，它是为了解决企业应用开发的复杂性而创建的。Spring的核心是控制反转(IOC)和面向切面编程(AOP).简单来说，Spring是一个分层的Java SE/EE full-stack(一站式)轻量级开源框架
	Spring的主要作用就是为了代码“解耦”,降低代码间的耦合度
	
【2】代码分类
	根据功能的不同，可以将一个系统中的代码分为主业务逻辑与系统业务逻辑两类
	主业务代码逻辑联系紧密，有具体的专业业务应用场景，复用性较低
	系统级业务相对功能独立，没有具体的专业业务应用场景，主要是为主业务提供系统级服务，如日志，安全，事务。复用性强
	
	Spring根据代码的功能特点，将降低耦合度的方式分为IOC和AOP
		IOC使得主业务在相互调用过程中，不用再自己维护关系，即不用再自己创建要使用的对象。即不用再自己创建要使用的对象了。而是由Spring容器统一管理，自动“注入”
		AOP使得系统级服务得到了最大的复用，且不用再由程序员手工将系统级服务混杂到主业务逻辑张，而是由Spring容器统一完成“织入”
		
【3】Spring体系架构
	Spring由20多个模块组成，它们可以分为：
		数据访问/集成(Data Access/Integration),
		Web,
		面向切面编程(AOP)
		用用服务设备管理(Instrumentation)，
		消息发送(Messaging)
		核心容器(Core Container)
		测试(Test)
		
【4】Spring特点
	非侵入式
		所谓非侵入式是指，Spring框架的API不会在业务逻辑上出现，即业务逻辑是POJO（Plain Old Java Object）由于业务逻辑中没有Spring的API，所以业务逻辑可以从Spring框架快速的移植到其他框架，即与环境无关
	容器
		Spring作为一个容器，可以管理对象的生命周期，对象与对象之间的依赖关系，可以通过配置文件，来定义对象，以及设置与其他对象的依赖关系	
	IOC
		控制反转（Inversion of Control）即创建调用者的实例不是由调用者完成，而是由Spring容器完成，并注入调用者	
	AOP	
		面向切面编程（AOP，Aspect Orient Programming），是一种编程思想，是面向对象编程OOP的补充。很多框架都实现了对AOP编程思想的实现
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	